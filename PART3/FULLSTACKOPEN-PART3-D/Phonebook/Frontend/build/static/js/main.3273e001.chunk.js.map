{"version":3,"sources":["components/Person.js","components/Form.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Note","name","number","remove","className","onClick","Form","form","filter","change0","change2","change1","clean","onSubmit","value","onChange","type","baseUrl","axios","get","then","res","data","object","post","id","delete","params","put","Notification","message","App","props","useState","person","setPerson","setClean","setNumber","setFilter","errors","setErrors","useEffect","personService","window","confirm","x","map","setTimeout","catch","error","n","names","includes","filtered","persons","toUpperCase","event","preventDefault","find","console","log","personObject","concat","response","target","i","Person","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3273e001.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ name, number, remove }) => {\n  return (\n    <li className=\"person\" >{name}  {number}  <button onClick={remove} >delete</button> </li>\n  )\n}\n\nexport default Note","import React from \"react\";\n\nconst Form = ({ form, filter, change0, change2, change1, number, clean }) => {\n  return (\n    <form onSubmit={form}>\n      Filter shown with <input value={filter} onChange={change0} />\n      <hr />\n      name: <input value={clean} onChange={change1} />\n      <br></br>\n      number: <input value={number} onChange={change2} />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import react from 'react'\nimport axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n\n    const request = axios.get(baseUrl)\n\n    return request.then( res => res.data)\n}\n\nconst create = (object) => {\n\n    const request = axios.post(baseUrl,object)\n\n    return request.then( res => res.data )\n}\n\nconst update = (id) => {\n\n    const request = axios.delete(`${baseUrl}/${id}`, { params: { id: id } })\n    return request.then(res => res.data)\n}\n\nconst replace = (id,object) =>{\n    const request = axios.put(`${baseUrl}/${id}`, object )\n    return request.then( res => res.data  )\n    \n}\n\nexport default {getAll, create, update, replace}\n","import React from \"react\";\n\n\nconst Notification = ({ message }) => {\n\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">{message}</div>\n  );\n};\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = (props) => {\n  const [person, setPerson] = useState([]);\n\n  const [clean, setClean] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((res) => {\n      setPerson(res);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   noteService\n  //     .getAll()\n  //     .then(initialNotes => {\n  //       setNotes(initialNotes)\n  //     })\n  // }, [])\n\n  const form = (event) => {\n    event.preventDefault();\n\n    if (names) {\n      if (window.confirm(`${clean} is already in the phonebook, replace?`)) {\n        const id = person.find((x) => x.name === clean).id;\n        // console.log(id)\n        const personObject1 = {\n          name: clean,\n          number: number,\n        };\n        personService.replace(id, personObject1).then((res) => {\n          console.log(res);\n          // return setPerson(res)\n        });\n        personService.getAll().then((res) => setPerson(res));\n\n        console.log(person);\n      }\n    } else {\n      const personObject = {\n        name: clean,\n        number: number,\n      };\n\n      personService.create(personObject).then((res) => {\n        setErrors(\n          `Note ${personObject.name} was added `\n        );\n        setTimeout(() => {\n          setErrors(null);\n        }, 5000);\n\n        setPerson(person.concat(res));\n      }).catch(error => {\n        setErrors(error.response.data)\n\n        setTimeout(() => {\n          setErrors(null);\n        }, 5000);\n      })\n    }\n\n    setClean(\"\");\n    setNumber(\"\");\n  };\n  const remove = (id) => {\n    if (window.confirm(\"Do you really want to delete?\")) {\n      personService\n        .update(id)\n        .then((res) => {\n          \n          setErrors(\n            `Note ${person\n              .filter((x) => x.id === id)\n              .map((x) => x.name)} was removed`\n          );\n          setTimeout(() => {\n            setErrors(null);\n          }, 5000);\n\n          setFilter(\"\");\n        })\n        .catch((error) => {\n          setErrors(\n            `Note ${person\n              .filter((x) => x.id === id)\n              .map((x) => x.name)} was already removed `\n          );\n          setTimeout(() => {\n            setErrors(null);\n          }, 5000);\n          setPerson(person.filter((n) => n.id !== id));\n        });\n\n      personService.getAll().then((res) => setPerson(res));\n    }\n  };\n\n  // console.log(id)\n\n  const change1 = (event) => {\n    setClean(event.target.value);\n  };\n  const change2 = (event) => {\n    setNumber(event.target.value);\n  };\n  const change0 = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const names = person.map((person) => person.name).includes(`${clean}`);\n\n  const filtered = person.filter((persons) =>\n    persons.name.toUpperCase().includes(`${filter.toUpperCase()}`)\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errors} />\n      <Form\n        form={form}\n        filter={filter}\n        change0={change0}\n        change1={change1}\n        change2={change2}\n        number={number}\n        clean={clean}\n      />\n      <h2>Numbers</h2>\n\n      <ul>\n        {filtered.map((person, i) => (\n          <Person\n            key={i}\n            name={person.name}\n            number={person.number}\n            remove={() => remove(person.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2020-01-10T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2020-01-10T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2020-01-10T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}