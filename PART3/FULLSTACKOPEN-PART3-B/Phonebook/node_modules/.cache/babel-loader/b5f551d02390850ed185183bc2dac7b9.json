{"ast":null,"code":"var _jsxFileName = \"/home/fascher/Desktop/FULLSTACKOPEN/PART3/FULLSTACKOPEN-PART3-B/Phonebook/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\n\nconst App = props => {\n  const [person, setPerson] = useState([]);\n  const [clean, setClean] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\"); // const [del, setDel] = useState(false)\n\n  useEffect(() => {\n    personService.getAll().then(res => {\n      setPerson(res);\n    });\n  }, []); // useEffect(() => {\n  //   noteService\n  //     .getAll()\n  //     .then(initialNotes => {\n  //       setNotes(initialNotes)\n  //     })\n  // }, [])\n\n  const form = event => {\n    event.preventDefault();\n\n    if (names) {\n      if (window.confirm(`${clean} is already in the phonebook, replace?`)) {\n        const id = person.find(x => x.name === clean).id; // console.log(id)\n\n        const personObject1 = {\n          name: clean,\n          number: number\n        };\n        personService.replace(id, personObject1).then(res => {\n          console.log(res); // return setPerson(res)\n        });\n        personService.getAll().then(res => setPerson(res));\n        console.log(person);\n      }\n    } else {\n      const personObject = {\n        name: clean,\n        number: number\n      };\n      personService.create(personObject).then(res => {\n        // console.log(res)\n        return setPerson(person.concat(res));\n      });\n    }\n\n    setClean(\"\");\n    setNumber(\"\");\n  };\n\n  const remove = id => {\n    if (window.confirm(\"Do you really want to delete?\")) {\n      personService.update(id).then(res => {\n        console.log(res);\n      }).catch(error => {\n        alert(`the note '${person.filter(x => x.id === id).map(x => x.name)}' was already deleted from server`);\n        setPerson(person.filter(n => n.id !== id));\n      });\n      personService.getAll().then(res => setPerson(res));\n    }\n  }; // console.log(id)\n\n\n  const change1 = event => {\n    setClean(event.target.value);\n  };\n\n  const change2 = event => {\n    setNumber(event.target.value);\n  };\n\n  const change0 = event => {\n    setFilter(event.target.value);\n  };\n\n  const names = person.map(person => person.name).includes(`${clean}`);\n  const filtered = person.filter(persons => persons.name.toUpperCase().includes(`${filter.toUpperCase()}`));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    filter: filter,\n    change0: change0,\n    change1: change1,\n    change2: change2,\n    number: number,\n    clean: clean,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, filtered.map((person, i) => /*#__PURE__*/React.createElement(Person, {\n    key: i,\n    name: person.name,\n    number: person.number,\n    remove: () => remove(person.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/fascher/Desktop/FULLSTACKOPEN/PART3/FULLSTACKOPEN-PART3-B/Phonebook/src/App.js"],"names":["React","useState","useEffect","Person","Form","Filter","axios","personService","App","props","person","setPerson","clean","setClean","number","setNumber","filter","setFilter","getAll","then","res","form","event","preventDefault","names","window","confirm","id","find","x","name","personObject1","replace","console","log","personObject","create","concat","remove","update","catch","error","alert","map","n","change1","target","value","change2","change0","includes","filtered","persons","toUpperCase","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\n\nconst App = (props) => {\n  const [person, setPerson] = useState([]);\n\n  const [clean, setClean] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  // const [del, setDel] = useState(false)\n\n  useEffect(() => {\n    personService.getAll().then((res) => {\n      setPerson(res);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   noteService\n  //     .getAll()\n  //     .then(initialNotes => {\n  //       setNotes(initialNotes)\n  //     })\n  // }, [])\n\n  const form = (event) => {\n    event.preventDefault();\n\n    if (names) {\n      if (window.confirm(`${clean} is already in the phonebook, replace?`)) {\n        const id = person.find(x => x.name === clean).id\n        // console.log(id)\n        const personObject1 = {\n          name: clean,\n          number: number,\n        };\n        personService.replace(id, personObject1).then( res =>{\n          console.log(res)\n          // return setPerson(res)\n          \n        })\n        personService.getAll().then( res => setPerson(res))\n\n\n        console.log(person)\n      }\n\n    } else {\n      const personObject = {\n        name: clean,\n        number: number,\n      };\n\n      personService.create(personObject).then((res) => {\n        // console.log(res)\n        return setPerson(person.concat(res));\n      });\n    }\n\n    setClean(\"\");\n    setNumber(\"\");\n  };\n  const remove = (id) => {\n    if (window.confirm(\"Do you really want to delete?\")) {\n      personService\n        .update(id)\n        .then((res) => {\n          console.log(res);\n          \n        })\n        .catch((error) => {\n          alert(\n            `the note '${person\n              .filter((x) => x.id === id)\n              .map((x) => x.name)}' was already deleted from server`\n          );\n          setPerson(person.filter((n) => n.id !== id));\n        });\n\n        personService.getAll().then(res => setPerson(res))\n\n    }\n  };\n\n  // console.log(id)\n\n  const change1 = (event) => {\n    setClean(event.target.value);\n  };\n  const change2 = (event) => {\n    setNumber(event.target.value);\n  };\n  const change0 = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const names = person.map((person) => person.name).includes(`${clean}`);\n\n  const filtered = person.filter((persons) =>\n    persons.name.toUpperCase().includes(`${filter.toUpperCase()}`)\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form\n        form={form}\n        filter={filter}\n        change0={change0}\n        change1={change1}\n        change2={change2}\n        number={number}\n        clean={clean}\n      />\n      <h2>Numbers</h2>\n\n      <ul>\n        {filtered.map((person, i) => (\n          <Person\n            key={i}\n            name={person.name}\n            number={person.number}\n            remove={() => remove(person.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}