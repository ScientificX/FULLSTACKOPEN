{"version":3,"sources":["components/Person.js","components/Form.js","services/persons.js","App.js","index.js"],"names":["Note","name","number","remove","onClick","Form","form","filter","change0","change2","change1","clean","onSubmit","value","onChange","type","baseUrl","axios","get","then","res","data","object","post","id","delete","params","put","App","props","useState","person","setPerson","setClean","setNumber","setFilter","useEffect","personService","window","confirm","console","log","catch","error","alert","x","map","n","names","includes","filtered","persons","toUpperCase","event","preventDefault","find","concat","target","i","Person","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.961ac5fa.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ name, number, remove }) => {\n  return (\n    <li>{name}  {number}  <button onClick={remove} >delete</button> </li>\n  )\n}\n\nexport default Note","import React from \"react\";\n\nconst Form = ({ form, filter, change0, change2, change1, number, clean }) => {\n  return (\n    <form onSubmit={form}>\n      Filter shown with <input value={filter} onChange={change0} />\n      <hr />\n      name: <input value={clean} onChange={change1} />\n      <br></br>\n      number: <input value={number} onChange={change2} />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import react from 'react'\nimport axios from 'axios'\n\nconst baseUrl = \"/api/person/\"\n\nconst getAll = () => {\n\n    const request = axios.get(baseUrl)\n\n    return request.then( res => res.data)\n}\n\nconst create = (object) => {\n\n    const request = axios.post(baseUrl,object)\n\n    return request.then( res => res.data )\n}\n\nconst update = (id) => {\n\n    const request = axios.delete(`${baseUrl}/${id}`, { params: { id: id } })\n    return request.then(res => res.data)\n}\n\nconst replace = (id,object) =>{\n    const request = axios.put(`${baseUrl}/${id}`, object )\n    return request.then( res => res.data  )\n    \n}\n\nexport default {getAll, create, update, replace}\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\n\nconst App = (props) => {\n  const [person, setPerson] = useState([]);\n\n  const [clean, setClean] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  // const [del, setDel] = useState(false)\n\n  useEffect(() => {\n    personService.getAll().then((res) => {\n      setPerson(res);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   noteService\n  //     .getAll()\n  //     .then(initialNotes => {\n  //       setNotes(initialNotes)\n  //     })\n  // }, [])\n\n  const form = (event) => {\n    event.preventDefault();\n\n    if (names) {\n      if (window.confirm(`${clean} is already in the phonebook, replace?`)) {\n        const id = person.find(x => x.name === clean).id\n        // console.log(id)\n        const personObject1 = {\n          name: clean,\n          number: number,\n        };\n        personService.replace(id, personObject1).then( res =>{\n          console.log(res)\n          // return setPerson(res)\n          \n        })\n        personService.getAll().then( res => setPerson(res))\n\n\n        console.log(person)\n      }\n\n    } else {\n      const personObject = {\n        name: clean,\n        number: number\n      };\n\n      personService.create(personObject).then((res) => {\n        console.log(number)\n        return setPerson(person.concat(res));\n      });\n    }\n\n    setClean(\"\");\n    setNumber(\"\");\n  };\n  const remove = (id) => {\n    if (window.confirm(\"Do you really want to delete?\")) {\n      personService\n        .update(id)\n        .then((res) => {\n          console.log(res);\n          setFilter(\"\");\n        })\n        .catch((error) => {\n          alert(\n            `the note '${person\n              .filter((x) => x.id === id)\n              .map((x) => x.name)}' was already deleted from server`\n          );\n          setPerson(person.filter((n) => n.id !== id));\n        });\n\n        personService.getAll().then(res => setPerson(res))\n\n    }\n  };\n\n  // console.log(id)\n\n  const change1 = (event) => {\n    setClean(event.target.value);\n  };\n  const change2 = (event) => {\n    setNumber(event.target.value);\n  };\n  const change0 = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const names = person.map((person) => person.name).includes(`${clean}`);\n\n  const filtered = person.filter((persons) =>\n    persons.name.toUpperCase().includes(`${filter.toUpperCase()}`)\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form\n        form={form}\n        filter={filter}\n        change0={change0}\n        change1={change1}\n        change2={change2}\n        number={number}\n        clean={clean}\n      />\n      <h2>Numbers</h2>\n\n      <ul>\n        {filtered.map((person, i) => (\n          <Person\n            key={i}\n            name={person.name}\n            number={person.number}\n            remove={() => remove(person.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2020-01-10T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2020-01-10T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2020-01-10T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}