{"ast":null,"code":"var _jsxFileName = \"/home/scientificx/Desktop/Web Dev (Autoplug)/autoplug/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" \", React.createElement(Header, {\n    course: course,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" \", React.createElement(Content, {\n    part1: part1,\n    part2: part2,\n    part3: part3,\n    exercises1: exercises1,\n    exercises2: exercises2,\n    exercises3: exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" \", React.createElement(Total, {\n    exercises1: exercises1,\n    exercises2: exercises2,\n    exercises3: exercises3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \" \"));\n};\n\nconst Header = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" The course is \", props.course));\n};\n\nconst Content = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" \", props.part1, \" has \", props.exercises1, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" \", props.part2, \" has \", props.exercises2, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" \", props.part3, \" has \", props.exercises3, \" \"));\n};\n\nconst Total = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" The total number of excercises is \", props.exercises1 + props.exercises2 + props.exercises3, \" \"));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/scientificx/Desktop/Web Dev (Autoplug)/autoplug/src/index.js"],"names":["React","ReactDOM","App","course","part1","exercises1","part2","exercises2","part3","exercises3","Header","props","Content","Total","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,KAAK,GAAG,uBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,KAAK,GAAG,0BAAd;AACA,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAMC,KAAK,GAAG,sBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEN,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEC,KAAhB;AAAuB,IAAA,KAAK,EAAEE,KAA9B;AAAqC,IAAA,KAAK,EAAEE,KAA5C;AAAmD,IAAA,UAAU,EAAEH,UAA/D;AAA2E,IAAA,UAAU,EAAEE,UAAvF;AAAmG,IAAA,UAAU,EAAEE,UAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEJ,UAAnB;AAA+B,IAAA,UAAU,EAAEE,UAA3C;AAAuD,IAAA,UAAU,EAAEE,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,MAHF,CADF;AAOD,CAfD;;AAgBA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBA,KAAK,CAACR,MAAzB,CADF,CADA;AAKD,CAPD;;AASA,MAAMS,OAAO,GAAID,KAAD,IAAW;AACzB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKA,KAAK,CAACP,KAAX,WAAuBO,KAAK,CAACN,UAA7B,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKM,KAAK,CAACL,KAAX,WAAuBK,KAAK,CAACJ,UAA7B,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKI,KAAK,CAACH,KAAX,WAAuBG,KAAK,CAACF,UAA7B,MAHF,CADF;AAQD,CATD;;AAWA,MAAMI,KAAK,GAAIF,KAAD,IAAW;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAuCA,KAAK,CAACN,UAAN,GAAmBM,KAAK,CAACJ,UAAzB,GAAsCI,KAAK,CAACF,UAAnF,MADF,CADF;AAKD,CAND;;AASAR,QAAQ,CAACa,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  const course = 'Half Stack application development'\n  const part1 = 'Fundamentals of React'\n  const exercises1 = 10\n  const part2 = 'Using props to pass data'\n  const exercises2 = 7\n  const part3 = 'State of a component'\n  const exercises3 = 14\n  return(\n    <div>\n      <p> <Header course={course} /> </p>\n      <p> <Content part1={part1} part2={part2} part3={part3} exercises1={exercises1} exercises2={exercises2} exercises3={exercises3} /> </p>\n      <p> <Total exercises1={exercises1} exercises2={exercises2} exercises3={exercises3}/> </p>\n    </div>\n  )\n}\nconst Header = (props) => {\n\n  return(\n  <div>\n    <p> The course is {props.course}</p>\n  </div>\n  )\n}\n\nconst Content = (props) => {\n  return(\n    <div>\n      <p> {props.part1} has {props.exercises1} </p>\n      <p> {props.part2} has {props.exercises2} </p>\n      <p> {props.part3} has {props.exercises3} </p>\n\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  return(\n    <div>\n      <p> The total number of excercises is {props.exercises1 + props.exercises2 + props.exercises3} </p>\n    </div>\n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}